qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
swirl()
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mog,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
library()
library(swirl)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
g <- ggplot(mpg,aes=(displ,hwy))
g <- ggplot(mpg,aes=c(displ,hwy))
g <- ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g <- ggplot(testdata,aes(x=myx,y=myy))
g <- ggplot(testdat,aes(x=myx,y=myy))
g+geom_line(0)
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_piont()
g+geom_point()
g+geom_point()+facet_grid(drv~cy1,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
g <- ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(x=carat,y=price))+geom_boxplot()+facet_grid(.~cut)
library(swirl)
swirl()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
distxy
plot(hc)
hc
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4)
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col="cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
q()
library(swirl)
swirl()
swirl()
swirl()
library()
library(swirl)
swirl()
library()
library(swirl)
swirl()
image(dataMatrix)
head(dataMatrix)
heatmap(dataMatrix)
myeidt("addPatt.R")
myedit("addPatt.R")
source(addPatt.R,local=TRUE)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMarix)
head(constantMatrix)
svd2$d
library(swirl)
swirl()
svd2[,1:2]
info()
svd2$v[,1:2]
svd2$d
dim(daceData)
dim(faceData)
a1 <- svd1$u[,1]*svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) *
| svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,2:5] %*% diag(svd1$d[2:5]) %*% t(svd1$v[,2:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
msidt<- dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1$c(10:12,maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)]
)
hculstering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562:563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <- which(Kclust$size==29)
laying <- which(KClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walikdown,1:12],pch=19,ylab="Walkdown Cluster")
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames,pipe="|",fixed=TRUE)
strsplit(cnames,sep="|",fixed=TRUE)
?strsplit
strsplit(cnames,split="|",fixed=TRUE)
strsplit(cnames,"|",fixed=TRUE)
cnames <- strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$pm25
x0 <- pm0$sample
x0 <- pm0$Sample
x0 <- pm0$Sample.value
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
pm1$Date <- dates
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code==36 & country.site %in% both)
cnt0 <- subset(pm0,State.Code==36 & (country.site %in% both))
cnt0 <- subset(pm0,State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code==36 & county.site %in% both)
sapply(slpit(cnt0,cnt0$county.site),nrow)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=(c(4,4,2,1)))
par(mfrow=c(1,2),mar=(c(4,4,2,1))
)
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- rang(x0sub,x1sub,na.rm=TRUE)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,argument="state")
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1:52),mrg[,2],x,xlim=c(.5,2.5)))
with(mrg,plot(rep(1:52),mrg[,2],c(1,2),xlim=c(.5,2.5)))
with(mrg,plot(rep(1:52),mrg[,2],1,xlim=c(.5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],c(1,2),xlim=c(.5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3])
)
with(mrg,points(rep(2,52),mrg[,3]))
segments(x,y)
str(x)
str(mrg)
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x
| < mrg$mean.y, ]
mrg[mrg$mean.x < mrg$mean.y, ]
library(swirl)
Alan
swirl()
install_from_swirl("Statistical Inference")
install_from_swirl("Regression Models")
swirl()
34/36
1-(1+1)/36
33/36
deck
1/52
52
1/52
1/13
1/4^5
0
3/13
3/51
2/51
?qunif
qunif(0.75,0,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x*p
sum(x*p)
75/187
library(UsingR)
install.packages(UsingR)
install.packages("UsingR")
# load necessary packages/install if needed
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}#
manipulate allows the user to change the variable mu to see how the mean squares changes
require(manipulate); manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))]
plot the correct graph
myHist(mean(galton$child))
install.packages("manipulate")
install.packages("manipulate")
# load necessary packages/install if needed
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}#
manipulate allows the user to change the variable mu to see how the mean squares changes
require(manipulate); manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))]
plot the correct graph
myHist(mean(galton$child))
# load necessary packages/install if needed
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
#manipulate allows the user to change the variable mu to see how the mean squares changes
require(manipulate); manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))]
plot the correct graph
myHist(mean(galton$child))
# load necessary packages/install if needed
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
##manipulate allows the user to change the variable mu to see how the mean squares changes
require(manipulate); manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))]
##plot the correct graph
myHist(mean(galton$child))
# load necessary packages/install if needed
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
##manipulate allows the user to change the variable mu to see how the mean squares changes
require(manipulate) manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))]
##plot the correct graph
myHist(mean(galton$child))
# load necessary packages/install if needed
library(ggplot2); library(UsingR); data(galton)
# function to plot the histograms
myHist <- function(mu){
# calculate the mean squares
mse <- mean((galton$child - mu)^2)
# plot histogram
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon",
colour = "black", binwidth=1)
# add vertical line marking the center value mu
g <- g + geom_vline(xintercept = mu, size = 2)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
##manipulate allows the user to change the variable mu to see how the mean squares changes
require(manipulate); manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
##plot the correct graph
myHist(mean(galton$child))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
x
w
sum(w*x^2)
sum(w*x)
sum(w)
2.06/7
3.8681/7
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x
y
lm(y~x)
plot(x,y)
data(mtcars)
head(mtcars)
lm(mpg~wt)
lm(mpg~wt)
lm(mpg~wt,data=mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x
(x[1]-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x
sum(x)/lenght(x)
sum(x)/lengh(x)
sum(x)/10
x
y
a <- lm(y~x)
b <- lm(x~y)
a
b
1.713/0.04462
mean(y)/mean(x)
2*sd(y)/sd(x)
corr(y,x)
cor(y,x)
var(y)/var(x)
?var
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
lm(x~y)
?lm
lm(y~x-1)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
plot(x,y)
lm(y~x-1)
library(swirl)
swirl
swirl()
install.packages("pandoc")
install.packages("LaTex")
install.packages("rmarkdown")
install.packages("rmarkdown")
?rmarkdown
??rmarkdown
library(ggplot2)
x <- seq(-3, 3, length = 1000)
head(x)
g <- ggplot(data.frame(x = x, y = dnorm(x)),
aes(x = x, y = y)) + geom_line(size = 2)
g <- g+geom_vline(xintercept = -3 : 3, size = 2)
g
remove(g)
y <- dnorm(x)
head(y)
?dnorm
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y),geom_line(size=2))
g
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y)+geom_line(size=2))
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y))+geom_line(size=2)
g
g+geom_vline(xintercept=-3:3,size=2)
g
g+geom_vline(xintercept=-3:3,size=2)
library(knitr)
?knit
setwd("C:/Users/Alan GZ Li/Documents/GitHub/RepData_PeerAssessment1")
knit("PA1_template.Rmd")
